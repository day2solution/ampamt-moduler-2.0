/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library


import org.apache.tools.ant.filters.ReplaceTokens
plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	
}
//defaultTasks 'copyPropertyFile'
apply plugin: 'war'
apply plugin: 'application'
mainClassName = "com.ampamt.moduler.MainApplication"
group = 'com.ampamt.moduler'
// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}
war {
  archiveName "ampamt-moduler.war"
}
dependencies {
// https://mvnrepository.com/artifact/clojure-interop/javax.crypto
	//implementation group: 'clojure-interop', name: 'javax.crypto', version: '1.0.2'

	implementation group: 'org.json', name: 'json', version: '20210307'
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	implementation group: 'com.razorpay', name: 'razorpay-java', version: '1.3.9'
	//implementation group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: '12.2.0.1'
	implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
	implementation group: 'org.springframework.data', name: 'spring-data-jpa', version: '2.5.1'
	implementation group: 'org.springframework.data', name: 'spring-data-commons', version: '2.5.1'
	implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
	implementation group: 'org.apache.poi', name: 'poi', version: '5.0.0'
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.0.0'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.5.0'
	implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.5.0.Final'
	implementation group: 'org.springframework', name: 'spring-orm', version: '5.0.2.RELEASE'
	implementation files('src/main/resources/libs/ojdbc6.jar')
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.security', name: 'spring-security-web', version: '5.5.0'
	implementation files('src/main/resources/libs/ojdbc6.jar')
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'
	
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-tomcat
implementation group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: '2.5.1'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.5.1'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
task{
println 'A message which is logged at QUIET level'
}
/*processResources {
    from('src/main/resources') {
        include 'application.properties'
       
    }
}

task copyPropertiesFile(type: Copy) {
    into 'src/main/resources/'
    
		println("********************Inside copyPropertiesFile() in-web-ifast-ws")
	
    from('build-properties') {
        include(profile + '.properties')
        rename(profile + '.properties', 'application.properties')
    }
    
    from('../in-web-ifast-core/build-properties') { 
       println("inside build-properties core properties")
        include(profile + '-core.properties')
        rename(profile + '-core.properties', 'application-core.properties')
    }

}

processResources.dependsOn copyPropertiesFile
war.dependsOn processResources*/


ext {
    envType="live"
}
sourceSets.all { ext.purpose = null }

sourceSets {
    main {
        purpose = "production"
    }
    test {
        purpose = "test"
    }
    plugin {
        purpose = "production"
    }
}

tasks.register('printProperties') {
    doLast {
        sourceSets.matching { it.purpose == "production" }.each { println it.name }
    }
}

//gradle copyPropertyFile -PenvType=live build

task copyPropertyFile (type: Copy) {
doFirst {
     	println("loading "+envType+" envronment")
    }
	   description 'Copies the resource directory to the target directory for '+envType
	   into 'src/main/resources'
	   from ('src/main/build-properties'){
		   include(envType+'-application.properties')
		   rename(envType+'-application.properties', 'application.properties')
	}
   
   //include('**/*.txt', '**/*.xml', '**/*.properties')
   println("values in property file applied from file >> "+envType+"-application.properties")
   println("copyPropertyFile task finished")
   
}
